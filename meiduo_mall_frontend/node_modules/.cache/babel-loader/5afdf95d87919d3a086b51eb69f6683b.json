{"remainingRequest":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/babel-loader/lib/index.js!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/components/VerifyEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/components/VerifyEmail.vue","mtime":1622534559371},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlZlcmlmeUVtYWlsIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6K6k6K+B57uT5p6cCiAgICAgIHZlcmlmeV9wYXNzOiBmYWxzZSwKICAgICAgdmVyaWZ5X2ZhaWw6IGZhbHNlLAogICAgICBlcnJvcl9tZXNzYWdlOiAiIiwKICAgICAgLy8g5Yqg6L295LitCiAgICAgIGxvYWRpbmc6IHRydWUsCiAgICAgIC8vIOWbvueJh+i3r+W+hOOAguW8leeUqOacrOWcsOWbvueJh+aXtu+8jOWwhuWbvueJh+S9nOS4uuWvueixoeWvvOWFpeaJjeiDvee7keWumgogICAgICBpbWFnZTogewogICAgICAgIHN1Y2Nlc3M6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvc3VjY2Vzcy5qcGVnIiksCiAgICAgICAgZmFpbHVyZTogcmVxdWlyZSgiLi4vYXNzZXRzL2ltYWdlcy9mYWlsdXJlLmpwZWciKSwKICAgICAgICBsb2FkaW5nOiByZXF1aXJlKCIuLi9hc3NldHMvaW1hZ2VzL2xvYWRpbmcuZ2lmIikKICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnZlcmlmeV9lbWFpbCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5Zue6LCD5Zyw5Z2A5Lit55qE5a2X5q6155qE5YC8CiAgICBnZXRDb2RlOiBmdW5jdGlvbiBnZXRDb2RlKG5hbWUpIHsKICAgICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgICB2YXIgcGFyYW1zID0gdXJsLnN1YnN0cih1cmwubGFzdEluZGV4T2YoIj8iKSArIDEpLnNwbGl0KCImIik7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBwYXJhbSA9IHBhcmFtc1tpXTsKICAgICAgICB2YXIga2V5ID0gcGFyYW0uc3BsaXQoIj0iKVswXTsKICAgICAgICB2YXIgdmFsdWUgPSBwYXJhbS5zcGxpdCgiPSIpWzFdOwoKICAgICAgICBpZiAoa2V5ID09PSBuYW1lKSB7CiAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgdmVyaWZ5X2VtYWlsOiBmdW5jdGlvbiB2ZXJpZnlfZW1haWwoKSB7CiAgICAgIHZhciB0b2tlbiA9IHRoaXMuZ2V0Q29kZSgidG9rZW4iKTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGF0LiRheGlvcy5nZXQoInZlcmlmeV9lbWFpbC8iLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB0b2tlbjogdG9rZW4KICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICB0aGF0LmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB0aGF0LnZlcmlmeV9wYXNzID0gdHJ1ZTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHRoYXQubG9hZGluZyA9IGZhbHNlOwogICAgICAgIHRoYXQudmVyaWZ5X2ZhaWwgPSB0cnVlOwogICAgICAgIHRoYXQuZXJyb3JfbWVzc2FnZSA9IGVyci5yZXNwb25zZS5kYXRhLm1zZzsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["VerifyEmail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA,KAHA;AAIA,MAAA,aAAA,EAAA,EAJA;AAMA;AACA,MAAA,OAAA,EAAA,IAPA;AASA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,CAAA,+BAAA,CADA;AAEA,QAAA,OAAA,EAAA,OAAA,CAAA,+BAAA,CAFA;AAGA,QAAA,OAAA,EAAA,OAAA,CAAA,8BAAA;AAHA;AAVA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,YAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,OAFA,mBAEA,IAFA,EAEA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA;AAEA,UAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,IAAA,CAAA,EAAA,KAAA,CAAA,GAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;;AACA,YAAA,GAAA,KAAA,IAAA,EAAA;AACA,iBAAA,KAAA;AACA;AACA;AACA,KAdA;AAeA,IAAA,YAfA,0BAeA;AACA,UAAA,KAAA,GAAA,KAAA,OAAA,CAAA,OAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,MAAA,CACA,GADA,CACA,eADA,EACA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA;AADA,OADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,QAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,OAVA,EAWA,KAXA,CAWA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,QAAA,IAAA,CAAA,aAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAfA;AAgBA;AAlCA;AAvBA,CAAA","sourcesContent":["<template>\n  <div style=\"width: 50em; margin-top: 2em;\">\n    <div v-if=\"loading\">\n      <el-image :src=\"image.loading\"></el-image>\n    </div>\n    <div v-if=\"verify_pass\">\n      <el-image :src=\"image.success\" style=\"width: 5em; height: 5em;\"></el-image>\n      <p style=\"font-size: 2.5em; color: green;\">恭喜您，认证成功！</p>\n      <el-button type=\"primary\" @click=\"$router.push({name: 'home'})\">返回主页</el-button>\n    </div>\n    <div v-if=\"verify_fail\">\n      <el-image :src=\"image.failure\" style=\"width: 5em; height: 5em;\"></el-image>\n      <p style=\"font-size: 2.5em; color: red;\">认证失败！</p>\n      <p style=\"font-size: 1em; color: red;\">失败原因：{{ error_message }}</p>\n      <el-button type=\"primary\" @click=\"$router.push({name: 'home'})\">返回主页</el-button>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"VerifyEmail\",\n  data() {\n    return {\n      // 认证结果\n      verify_pass: false,\n      verify_fail: false,\n      error_message: \"\",\n\n      // 加载中\n      loading: true,\n\n      // 图片路径。引用本地图片时，将图片作为对象导入才能绑定\n      image: {\n        success: require(\"../assets/images/success.jpeg\"),\n        failure: require(\"../assets/images/failure.jpeg\"),\n        loading: require(\"../assets/images/loading.gif\")\n      }\n    };\n  },\n  mounted() {\n    this.verify_email();\n  },\n  methods: {\n    // 获取回调地址中的字段的值\n    getCode(name) {\n      let url = window.location.href;\n\n      let params = url.substr(url.lastIndexOf(\"?\") + 1).split(\"&\");\n      for (let i = 0; i < params.length; i++) {\n        let param = params[i];\n        let key = param.split(\"=\")[0];\n        let value = param.split(\"=\")[1];\n        if (key === name) {\n          return value;\n        }\n      }\n    },\n    verify_email() {\n      let token = this.getCode(\"token\");\n      let that = this;\n      that.$axios\n        .get(\"verify_email/\", {\n          params: {\n            token: token\n          }\n        })\n        .then(res => {\n          console.log(res.data);\n          that.loading = false;\n          that.verify_pass = true;\n        })\n        .catch(err => {\n          that.loading = false;\n          that.verify_fail = true;\n          that.error_message = err.response.data.msg;\n        });\n    }\n  }\n};\n</script>\n<style scoped>\np {\n  margin: 0.5em;\n}\n\ndiv {\n  background-color:white;\n  text-align: center;\n}\n</style>"],"sourceRoot":"src/components"}]}