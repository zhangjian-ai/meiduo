{"remainingRequest":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/babel-loader/lib/index.js!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/components/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/components/Detail.vue","mtime":1622799992742},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGV0YWlsIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5pyN5Yqh5Zmo6L+U5Zue55qE6K+m57uG5L+h5oGvCiAgICAgIHVzZXJuYW1lOiAiIiwKICAgICAgbW9iaWxlOiAiIiwKICAgICAgZW1haWw6ICIiLAogICAgICAvLyDorqTor4Hpgq7nrrHpgLvovpHlj4LmlbAKICAgICAgaGFzOiBmYWxzZSwKICAgICAgLy8g5piv5ZCm5pyJ6YKu566xCiAgICAgIGVtYWlsX2FjdGl2ZTogZmFsc2UsCiAgICAgIC8vIOaYr+WQpuW3suiupOivgQogICAgICBzaG93OiBmYWxzZSwKICAgICAgLy8g5pS25ZCm5bGV56S66YKu566x57uR5a6a5qCPCiAgICAgIC8v57uR5a6a6YKu566x6L6T5YWl5qGGCiAgICAgIGlucHV0X2VtYWlsOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldF91c2VyX2luZm8oKTsKICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0UGF0aCIsIHRoaXMuJHJvdXRlLnBhdGgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W55So5oi35L+h5oGvCiAgICBnZXRfdXNlcl9pbmZvOiBmdW5jdGlvbiBnZXRfdXNlcl9pbmZvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGF0LiRheGlvcy5nZXQoInVzZXIvIiwge30pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIOWKoOi9veeUqOaIt+S/oeaBrwogICAgICAgIHRoYXQudXNlcm5hbWUgPSByZXMuZGF0YS51c2VybmFtZTsKICAgICAgICB0aGF0Lm1vYmlsZSA9IHJlcy5kYXRhLm1vYmlsZTsKCiAgICAgICAgaWYgKHJlcy5kYXRhLmVtYWlsKSB7CiAgICAgICAgICB0aGF0LmVtYWlsID0gcmVzLmRhdGEuZW1haWw7CiAgICAgICAgICB0aGF0LmhhcyA9IHRydWU7CgogICAgICAgICAgaWYgKHJlcy5kYXRhLmVtYWlsX2FjdGl2ZSA9PT0gdHJ1ZSkgewogICAgICAgICAgICB0aGF0LmVtYWlsX2FjdGl2ZSA9IHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICB0aXRsZTogIuiOt+WPlueUqOaIt+S/oeaBr+Wksei0pSIsCiAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+e7keWumumCrueusQogICAgYmluZF9lbWFpbDogZnVuY3Rpb24gYmluZF9lbWFpbCgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwoKICAgICAgaWYgKHRoYXQuZW1haWwpIHsKICAgICAgICB0aGF0LmlucHV0X2VtYWlsID0gdGhhdC5lbWFpbDsKICAgICAgfSAvLyDmoKHpqozpgq7nrrHmoLzlvI8KCgogICAgICB2YXIgcmUgPSAvXlthLXowLTldW1x3XC5cLV0qQFthLXowLTlcLV0rKFwuW2Etel17Miw1fSl7MSwyfSQvOwoKICAgICAgaWYgKHJlLnRlc3QodGhhdC5pbnB1dF9lbWFpbCkpIHsKICAgICAgICAvL+mCrueuseagvOW8j+agoemqjOmAmui/h+WQju+8jOWQkeWQjuerr+WPkei1t+ivt+axggogICAgICAgIHRoYXQuJGF4aW9zLnB1dCgiZW1haWwvIiwgewogICAgICAgICAgZW1haWw6IHRoYXQuaW5wdXRfZW1haWwKICAgICAgICB9LCB7CiAgICAgICAgICAvLyDlkJHlkI7nq6/kvKDpgJJKV1QgdG9rZW7nmoTmlrnms5UKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkpXVCAiICsgdGhhdC4kc3RvcmUuc3RhdGUudG9rZW4gLy8g5pC65bimdG9rZW7orr/pl67mjqXlj6MKCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAvLyDliqDovb3nlKjmiLfkv6Hmga8KICAgICAgICAgIGlmICh0aGF0LmlucHV0X2VtYWlsID09PSByZXMuZGF0YS5lbWFpbCkgewogICAgICAgICAgICB0aGF0LiRub3RpZnkoewogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICB0aXRsZTogIumCrueusee7keWumuaIkOWKnyIsCiAgICAgICAgICAgICAgbWVzc2FnZTogIuivt+azqOaEj+afpeaUtumCruS7tui/m+ihjOmqjOivge+8jOmqjOivgemCruS7tuacieaViOacn+S4ujXliIbpkp8iCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGF0LmVtYWlsID0gcmVzLmRhdGEuZW1haWw7CiAgICAgICAgICAgIHRoYXQuaGFzID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICB0aGF0LiRub3RpZnkuZXJyb3IoewogICAgICAgICAgICB0aXRsZTogIue7keWumuWksei0pSIsCiAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGF0LiRub3RpZnkuZXJyb3IoewogICAgICAgICAgdGl0bGU6ICLnu5HlrprlpLHotKUiLAogICAgICAgICAgbWVzc2FnZTogIumCrueuseagvOW8j+mUmeivryIKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <p style=\"margin-top: 0;\">详情信息</p>\n      <el-divider></el-divider>\n\n      <div class=\"info\">\n        <el-col :span=\"1\">\n          <pre style=\"margin:0; padding: 0;\">&nbsp;</pre>\n        </el-col>\n        <!-- 用户详情 -->\n        <el-col :span=\"2\">\n          <p>用户名：</p>\n          <p>手机号：</p>\n          <p>Email：</p>\n        </el-col>\n        <el-col :span=\"14\" style=\"text-align: left;\">\n          <p>{{ username }}</p>\n          <p>{{ mobile }}</p>\n          <p>\n            <span v-if=\"has\">\n              {{ email }}&nbsp;\n              <span v-if=\"email_active\">\n                <el-button size=\"mini\" type=\"success\">已认证</el-button>\n              </span>\n              <span v-else>\n                <span style=\"font-size: 0.5em; color: red;\">未收到邮件？</span>\n                <el-button size=\"mini\" type=\"info\" @click=\"bind_email\">重新发送</el-button>\n              </span>\n            </span>\n            <span v-else>\n              <span v-if=\"show\">\n                <el-input v-model=\"input_email\" placeholder=\"请输入邮箱\" size=\"mini\"></el-input>&nbsp;\n                <el-button type=\"primary\" @click=\"bind_email\">确认</el-button>\n                <el-button type=\"info\" @click=\"show = false\">取消</el-button>\n              </span>\n              <span v-else>\n                <span style=\"font-size: 0.5em; color: red;\">当前未绑定邮箱</span>&nbsp;\n                <el-button type=\"info\" @click=\"show = true\">绑定</el-button>\n              </span>\n            </span>\n          </p>\n        </el-col>\n      </div>\n    </el-row>\n    <el-row>\n      <p>最近浏览</p>\n      <el-divider></el-divider>\n    </el-row>\n  </div>\n</template>\n<script>\n/* eslint-disable */\nexport default {\n  name: \"Detail\",\n  data() {\n    return {\n      // 服务器返回的详细信息\n      username: \"\",\n      mobile: \"\",\n      email: \"\",\n\n      // 认证邮箱逻辑参数\n      has: false, // 是否有邮箱\n      email_active: false, // 是否已认证\n      show: false, // 收否展示邮箱绑定栏\n\n      //绑定邮箱输入框\n      input_email: \"\"\n    };\n  },\n  mounted() {\n    this.get_user_info();\n    this.$store.commit(\"setPath\", this.$route.path);\n  },\n  methods: {\n    // 获取用户信息\n    get_user_info() {\n      let that = this;\n      that.$axios\n        .get(\"user/\", {})\n        .then(res => {\n          // 加载用户信息\n          that.username = res.data.username;\n          that.mobile = res.data.mobile;\n          if (res.data.email) {\n            that.email = res.data.email;\n            that.has = true;\n            if (res.data.email_active === true) {\n              that.email_active = true;\n            }\n          }\n        })\n        .catch(err => {\n          this.$notify.error({\n            title: \"获取用户信息失败\",\n            message: err.message\n          });\n        });\n    },\n\n    //绑定邮箱\n    bind_email() {\n      let that = this;\n      if (that.email) {\n        that.input_email = that.email;\n      }\n      // 校验邮箱格式\n      let re = /^[a-z0-9][\\w\\.\\-]*@[a-z0-9\\-]+(\\.[a-z]{2,5}){1,2}$/;\n      if (re.test(that.input_email)) {\n        //邮箱格式校验通过后，向后端发起请求\n        that.$axios\n          .put(\n            \"email/\",\n            { email: that.input_email },\n            {\n              // 向后端传递JWT token的方法\n              headers: {\n                Authorization: \"JWT \" + that.$store.state.token // 携带token访问接口\n              }\n            }\n          )\n          .then(res => {\n            // 加载用户信息\n            if (that.input_email === res.data.email) {\n              that.$notify({\n                type: \"success\",\n                title: \"邮箱绑定成功\",\n                message: \"请注意查收邮件进行验证，验证邮件有效期为5分钟\"\n              });\n              that.email = res.data.email;\n              that.has = true;\n            }\n          })\n          .catch(err => {\n            that.$notify.error({\n              title: \"绑定失败\",\n              message: err.message\n            });\n          });\n      } else {\n        that.$notify.error({\n          title: \"绑定失败\",\n          message: \"邮箱格式错误\"\n        });\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n.info {\n  font-size: 1em;\n  height: 8em;\n  text-align: right;\n  background-color: rgb(243, 240, 240);\n  border-radius: 3px;\n}\n.info .el-button {\n  font-size: 1em;\n  height: 1.4em;\n  padding-top: 0.2em;\n  padding-left: 0.3em;\n  padding-right: 0.3em;\n  margin-left: 0.5em;\n}\n.info .el-input {\n  width: 20em;\n  margin-right: 1em;\n}\n.el-divider {\n  margin: 0.5em;\n  margin-left: 0;\n  padding: 0;\n}\n</style>"],"sourceRoot":"src/components"}]}