{"remainingRequest":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/views/BindUser.vue?vue&type=style&index=0&id=247a38af&scoped=true&lang=css&","dependencies":[{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/src/views/BindUser.vue","mtime":1624210309246},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangjian/PycharmProjects/meiduo/meiduo_mall_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJhbm5lci10ZXh0IHsKICBjb2xvcjogcmVkOwp9Ci5yZWdpc3Rlci10ZXh0IHsKICBmb250LXNpemU6IDEuNWVtOwogIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjsKICBjb2xvcjogZ3JleTsKfQouZWwtaW5wdXQgewogIHdpZHRoOiAyMGVtOwp9Ci5lbC1mb3JtLWl0ZW0gewogIHBhZGRpbmctYm90dG9tOiAyZW07Cn0KLmVsLWZvcm0gewogIGJhY2tncm91bmQtY29sb3I6IHJnYigxODAsIDIwMiwgMjA2KTsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgcGFkZGluZy10b3A6IDJlbTsKfQo="},{"version":3,"sources":["BindUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BindUser.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div v-if=\"exist\" style=\"text-align: center;\">\n      <el-image :src=\"image.loading\"></el-image>\n    </div>\n    <div v-else>\n      <el-row>\n        <!-- 左半部分 -->\n        <el-col :span=\"14\" style=\"margin-top: 4em; text-align: right;\">\n          <div>\n            <div>\n              <el-image :src=\"image.logo\"></el-image>\n            </div>\n            <div>\n              <span class=\"banner-text\">商品美·种类多·欢迎选购</span>\n            </div>\n            <div></div>\n            <el-image :src=\"image.register\"></el-image>\n          </div>\n        </el-col>\n        <!-- 分割线 -->\n        <el-col :span=\"1\" style=\"margin-top: 2em; text-align: center;\">\n          <el-image :src=\"image.interval\"></el-image>\n        </el-col>\n        <!-- 右半部分 -->\n        <el-col :span=\"9\" style=\"width: 22em; margin-top: 4em;\">\n          <div>\n            <!-- 标题栏 -->\n            <el-row style=\"line-height: 3em;\">\n              <el-col :span=\"18\">\n                <span class=\"register-text\">绑定账号</span>\n              </el-col>\n            </el-row>\n            <!-- 注册表单 -->\n            <el-form size=\"mini\" label-width=\"6em\" :model=\"form\" :rules=\"rules\" ref=\"registerForm\">\n              <el-form-item label=\"手机号:\" prop=\"mobile\">\n                <el-input v-model=\"form.mobile\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码:\" prop=\"password\">\n                <el-input v-model=\"form.password\" type=\"password\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"验证码:\" prop=\"sms_code\">\n                <span style=\"width: 20em;\">\n                  <el-input style=\"width: 10em; margin-right:1em;\" v-model=\"form.sms_code\"></el-input>\n                  <el-button\n                    style=\"width: 8em; text-align: center;\"\n                    @click=\"getSmsCode\"\n                    type=\"primary\"\n                    :disabled=\"send_flag\"\n                  >{{ send_tips }}</el-button>\n                </span>\n              </el-form-item>\n              <el-form-item style=\"text-align: center; margin-top: 0px;\" label-width=\"0\">\n                <el-button type=\"danger\" size=\"medium\" style=\"width: 20em;\" @click=\"submit\">保&nbsp;存</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-col>\n      </el-row>\n      <!-- 分割线 -->\n      <el-divider></el-divider>\n      <!-- footer部分 -->\n      <Footer></Footer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Footer from \"@/components/Footer.vue\";\n\nexport default {\n  data() {\n    return {\n      // 图片路径。引用本地图片时，将图片作为对象导入才能绑定\n      image: {\n        logo: require(\"../assets/images/logo.png\"),\n        register: require(\"../assets/images/register_banner.png\"),\n        interval: require(\"../assets/images/interval_line.png\"),\n        loading: require(\"../assets/images/loading.gif\")\n      },\n\n      // 发送短信按钮标识及文本\n      send_flag: false,\n      send_tips: \"发送验证码\",\n\n      // 绑定表单\n      form: {\n        mobile: \"\",\n        password: \"\",\n        sms_code: \"\",\n        openid: \"\"\n      },\n\n      // 表单校验规则\n      rules: {\n        password: [\n          {\n            required: true,\n            message: \"请输入密码\",\n            trigger: \"blur\"\n          }\n        ],\n        mobile: [\n          {\n            required: true,\n            pattern: /^1[3-9]{1}\\d{9}$/,\n            message: \"手机号码不合法\",\n            trigger: \"blur\"\n          }\n        ],\n        sms_code: [\n          {\n            required: true,\n            pattern: /^[0-9]{6}$/,\n            message: \"验证码格式错误\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n\n      // QQ用户是否存在\n      exist: true\n    };\n  },\n  mounted() {\n    this.checkUser();\n  },\n  methods: {\n    // 获取短信验证码\n    getSmsCode() {\n      let that = this;\n      if (that.form.mobile) {\n        // 判断是否已经发了短信\n        if (that.send_flag) {\n          return;\n        }\n\n        that.$axios.get(\"sms_codes/\" + that.form.mobile, {}).then(() => {\n          // 短信发送成功后，置灰按钮，倒计时60秒，60秒后允许用户再次点击发送短信验证码的按钮\n          that.send_flag = true;\n          let num = 60;\n          // 设置一个计时器\n          let timer = setInterval(\n            () => {\n              if (num == 1) {\n                // 如果计时器到最后, 清除计时器对象\n                clearInterval(timer);\n                // 将点击获取验证码的按钮展示的文本回复成原始文本\n                that.send_tips = \"发送验证码\";\n                // 将点击按钮的onclick事件函数恢复回去\n                that.send_flag = false;\n              } else {\n                num -= 1;\n                // 展示倒计时信息\n                that.send_tips = num + \"秒\";\n              }\n            },\n            1000,\n            60\n          );\n        });\n      } else {\n        that.$message.error(\"请先填写手机号！\");\n      }\n    },\n    // 提交绑定表单。提交表单是不论是QQ还是钉钉都走QQ的绑定逻辑，二者在后端处理方式相同\n    submit() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          let that = this;\n          that.$axios.post(\"oauth/qq/user/\", that.form).then(res => {\n            // 绑定成功时，状态码为200\n            //注册成功后，在本地保存token,id,username等信息\n            that.$router.commit(\"setStatus\", {\n              username: res.data.username,\n              token: res.data.token\n            });\n\n            // 跳转页面。根据跳转过来的页面，登陆成功后，跳转回去；否则进入主页\n            that.$router.replace(that.$route.query.redirect || \"/\");\n          });\n        }\n        return false;\n      });\n    },\n    // 获取回调地址中的字段的值\n    getCode(name) {\n      let url = window.location.href;\n\n      let params = url.substr(url.lastIndexOf(\"?\") + 1).split(\"&\");\n      for (let i = 0; i < params.length; i++) {\n        let param = params[i];\n        let key = param.split(\"=\")[0];\n        let value = param.split(\"=\")[1];\n        if (key === name) {\n          return value;\n        }\n      }\n    },\n    // 回调时自动发起请求，检查当前用户是否绑定\n    checkUser() {\n      let that = this;\n\n      // 获取来源地址，利用回调地址中的state参数来区分是QQ登陆还是钉钉登陆\n      let state = that.getCode(\"state\");\n\n      if (state === \"STATE\") {\n        that.$axios\n          .get(\"oauth/dt/user/\", { params: { code: that.getCode(\"code\") } })\n          .then(res => {\n            if (res.data.openid) {\n              // 如果openid有值说明之前没有绑定过网站账户，此时设置回调页面进入绑定界面\n              that.exist = false;\n              that.form.openid = res.data.openid;\n            } else {\n              // 拿到保存信息，然后返回到登陆前的页面\n              sessionStorage.clear(); // sessionStorage关闭浏览器即清除\n              localStorage.clear(); // 永久保存\n              sessionStorage.token = res.data.token;\n              sessionStorage.username = res.data.username;\n              sessionStorage.user_id = res.data.id;\n\n              that.$store.commit(\"setStatus\", {\n                username: res.data.username,\n                token: res.data.token\n              });\n              // 返回起始页\n              that.$router.replace(that.$route.query.redirect || \"/\");\n            }\n          });\n      } else {\n        that.$axios\n          .get(\"oauth/qq/user\", { params: { code: that.getCode(\"code\") } })\n          .then(res => {\n            if (res.data.openid) {\n              // 如果openid有值说明该QQ号之前没有绑定过网站账户，此时设置回调页面进入绑定界面\n              that.exist = false;\n              that.form.openid = res.data.openid;\n            } else {\n              // 拿到保存信息，然后返回到登陆前的页面\n              sessionStorage.clear(); // sessionStorage关闭浏览器即清除\n              localStorage.clear(); // 永久保存\n              sessionStorage.token = res.data.token;\n              sessionStorage.username = res.data.username;\n              sessionStorage.user_id = res.data.id;\n\n              that.$store.commit(\"setStatus\", {\n                username: res.data.username,\n                token: res.data.token\n              });\n              // 返回起始页\n              that.$router.replace(that.$route.query.redirect || \"/\");\n            }\n          });\n      }\n    }\n  },\n  components: {\n    Footer\n  }\n};\n</script>\n\n<style scoped>\n.banner-text {\n  color: red;\n}\n.register-text {\n  font-size: 1.5em;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  color: grey;\n}\n.el-input {\n  width: 20em;\n}\n.el-form-item {\n  padding-bottom: 2em;\n}\n.el-form {\n  background-color: rgb(180, 202, 206);\n  border-radius: 5px;\n  padding-top: 2em;\n}\n</style>"]}]}